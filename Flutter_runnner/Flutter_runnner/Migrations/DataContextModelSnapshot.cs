// <auto-generated />
using System;
using Flutter_runnner;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flutter_runnner.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Flutter_runnner.Entries", b =>
                {
                    b.Property<int>("entry_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("entry_id"));

                    b.Property<int>("details_id")
                        .HasColumnType("int");

                    b.Property<int>("stats_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("entry_id");

                    b.HasIndex("details_id");

                    b.HasIndex("stats_id");

                    b.HasIndex("user_id");

                    b.ToTable("Entries_tbl", (string)null);
                });

            modelBuilder.Entity("Flutter_runnner.SessionStatscs", b =>
                {
                    b.Property<int>("stats_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stats_Id"));

                    b.Property<float>("average_pace")
                        .HasColumnType("real");

                    b.Property<float>("average_speed")
                        .HasColumnType("real");

                    b.Property<float>("low_speed")
                        .HasColumnType("real");

                    b.Property<float>("top_speed")
                        .HasColumnType("real");

                    b.HasKey("stats_Id");

                    b.ToTable("SessionStatscs_tbl", (string)null);
                });

            modelBuilder.Entity("Flutter_runnner.SessionsDetails", b =>
                {
                    b.Property<int>("details_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("details_Id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("duration")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("map")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("details_Id");

                    b.ToTable("SessionsDetails_tbl", (string)null);
                });

            modelBuilder.Entity("Flutter_runnner.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users_tbl", (string)null);
                });

            modelBuilder.Entity("Flutter_runnner.Entries", b =>
                {
                    b.HasOne("Flutter_runnner.SessionsDetails", "SessionsDetails")
                        .WithMany()
                        .HasForeignKey("details_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flutter_runnner.SessionStatscs", "SessionStatscs")
                        .WithMany()
                        .HasForeignKey("stats_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flutter_runnner.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionStatscs");

                    b.Navigation("SessionsDetails");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
